// Обработчик запросов метода GET ресурса /tasks_user
//	сервиса oas_api
// 
// В метод передается структура контекста входящего запроса (см. оас_Контекст), содержащая 
// 	Сервис - Строка - БазовыйURL запроса, равен КорневойURL сервиса
// 	Метод - Строка - HTTPМетод
// 	Ресурс - Строка - ОтносительныйURL запроса
// 	Точка - Строка - Ресурс спецификации (user/{username}, /order/{orderId}/update)
// 	Параметры - Соответствие - полученные по спецификации параметры
// 		<Ключ> - Строка - имя параметра
// 		Значение - Строка, Число - значение параметра
// 	Тело - Строка, ДвоичныеДанные - полученное по спецификации тело запроса
// 	Обработчик - Соответствие - полное имя и вызываемы метод обработчика ресурса по настройкам
// 		Имя - Строка - полное имя обработки
// 		Метод - Строка - имя вызываемого метода
// 
// BSLLS:NestedFunctionInParameters-off - без лишних переменных выполнение быстрее
// BSLLS:EmptyRegion-off - пустые области разрешены

#Область ОписаниеПеременных

#КонецОбласти


#Область ПрограммныйИнтерфейс

// Возвращает ответ по запросу GET ресурса /tasks_user
//	сервиса oas_api
//
// Параметры: 
//	guidUser - Строка - Обязательный, 
// 
// Тело запроса:
//	Текст, необязательное
//
// Возвращаемое значение: 
//	HTTPСервисОтвет 
// Схема ответа:
//	{
//		"200": {
//			"description": "OK",
//			"content": {
//				"application/json": {
//					"schema": {
//						"type": "array",
//						"items": {
//							"type": "object",
//							"properties": {
//								"date": {
//									"type": "string",
//									"format": "date-time"
//								},
//								"title": {
//									"type": "string"
//								},
//								"condition": {
//									"type": "string",
//									"description": "Состояние",
//									"enum": [
//										"appointed",
//										"received",
//										"progress",
//										"postponed",
//										"completed",
//										"resumed"
//									]
//								},
//								"importance": {
//									"type": "string",
//									"description": "Важность",
//									"enum": [
//										"base",
//										"low",
//										"high"
//									]
//								},
//								"partner": {
//									"description": "Ссылка на справочник",
//									"type": "object",
//									"properties": {
//										"guid": {
//											"type": "string",
//											"description": "Уникальный идентификатор"
//										},
//										"type": {
//											"type": "string",
//											"description": "Тип справочника"
//										},
//										"name": {
//											"type": "string",
//											"description": "Наименование справочника"
//										},
//										"code": {
//											"type": "string",
//											"description": "Код справочника"
//										}
//									}
//								},
//								"author": {
//									"description": "Ссылка на справочник",
//									"type": "object",
//									"properties": {
//										"guid": {
//											"type": "string",
//											"description": "Уникальный идентификатор"
//										},
//										"type": {
//											"type": "string",
//											"description": "Тип справочника"
//										},
//										"name": {
//											"type": "string",
//											"description": "Наименование справочника"
//										},
//										"code": {
//											"type": "string",
//											"description": "Код справочника"
//										}
//									}
//								},
//								"responsible": {
//									"description": "Ссылка на справочник",
//									"type": "object",
//									"properties": {
//										"guid": {
//											"type": "string",
//											"description": "Уникальный идентификатор"
//										},
//										"type": {
//											"type": "string",
//											"description": "Тип справочника"
//										},
//										"name": {
//											"type": "string",
//											"description": "Наименование справочника"
//										},
//										"code": {
//											"type": "string",
//											"description": "Код справочника"
//										}
//									}
//								},
//								"producer": {
//									"description": "Ссылка на справочник",
//									"type": "object",
//									"properties": {
//										"guid": {
//											"type": "string",
//											"description": "Уникальный идентификатор"
//										},
//										"type": {
//											"type": "string",
//											"description": "Тип справочника"
//										},
//										"name": {
//											"type": "string",
//											"description": "Наименование справочника"
//										},
//										"code": {
//											"type": "string",
//											"description": "Код справочника"
//										}
//									}
//								}
//							},
//							"description": "Элемент журнала задач"
//						}
//					}
//				}
//			}
//		}
//	}
//
Функция Ответ(Контекст) Экспорт
	
	Результат	= Неопределено;
	
	// Допустимы вызовы ТОЛЬКО в серверном контексте
	#Если Сервер Тогда
		
		Результат	= оас_Сервис.ПротоколОтвет(200);
		Тело		= оас_Контекст.Тело(Контекст);
		// Разворачиваем параметры в локальные переменные 
		Параметры	= оас_Контекст.Параметры(Контекст); 
		_name = Параметры.Получить("name");
		
		Массив = Новый Массив;
		
		Для Каждого ЗначениеПеречисления ИЗ Перечисления[_name] Цикл
			Структура = oas_anit.ВернутьСтруктуруПеречисления(ЗначениеПеречисления);
			Массив.Добавить(Структура);
			
		КонецЦикла;
		
		CтрокаJSON = oas_anit.СтруктуруВjSON(Массив);
		Результат.УстановитьТелоИзСтроки(CтрокаJSON,КодировкаТекста.UTF8);
		
	#Иначе
		ВызватьИсключение оас_ПодсистемаТексты.СредаВыполненияОшибка();
	#КонецЕсли
	
	Возврат Результат;
	
КонецФункции // Ответ 

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#КонецОбласти

// BSLLS:EmptyRegion-on
// BSLLS:NestedFunctionInParameters-on